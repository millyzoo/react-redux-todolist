{"version":3,"sources":["images/clear.svg","images/delete.svg","components/TodoItem.js","redux/actionTypes.js","redux/actions.js","constants/filter.js","components/TodoList.js","components/GlobalStyle.js","components/App.js","reportWebVitals.js","redux/reducers/todos.js","redux/reducers/index.js","redux/reducers/filter.js","redux/store.js","index.js"],"names":["TodoItem","styled","li","TodoItemContent","div","TodoItemText","label","props","$isDone","TodoCheckbox","TodoContent","p","TodoButtonWrapper","Button","button","SingleTodoItem","todo","handleDeleteTodo","handleToggleIsDone","data-todo-id","id","isDone","onClick","content","src","DeleteImg","alt","ADD_TODO","DELETE_TODO","TOGGLE_TODO","CLEAR_COMPLETED_TODO","SET_CURRENT_FILTER","setCurrentFilter","filterName","type","payload","FILTER","TodoListWrapper","section","FilterWrapper","FilterButton","$isActive","TodoItemInfo","IncompletedCount","span","ClearButton","TodoItemWrapper","ul","TodoItemInputField","TodoItemTextField","input","AddButton","TodoList","dispatch","useDispatch","todos","useSelector","store","currentFilter","filter","useState","value","setValue","incompleteCount","length","SendTodoContent","deleteTodo","toggleIsDone","filterTodos","useMemo","clearImg","map","placeholder","onChange","e","target","onKeyDown","keyCode","GlobalCSS","createGlobalStyle","GlobalStyle","Wrapper","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","nextTodoId","initialState","combineReducers","state","action","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.752f4a59.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/clear.32466c17.svg\";","export default __webpack_public_path__ + \"static/media/delete.89150e53.svg\";","import styled from \"styled-components\";\nimport DeleteImg from \"../images/delete.svg\";\nimport PropTypes from \"prop-types\";\n\nconst TodoItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 45px;\n  transition: 0.3s;\n\n  &:hover {\n    background-color: #f6f6f6;\n  }\n  &:hover Button {\n    opacity: 1;\n  }\n`;\n\nconst TodoItemContent = styled.div`\n  display: flex;\n  align-items: center;\n  width: calc(100% - 40px);\n  height: 100%;\n  color: #555555;\n`;\n\nconst TodoItemText = styled.label`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n  transition: 0.3s;\n\n  input {\n    margin-right: 15px;\n  }\n\n  ${(props) =>\n    props.$isDone &&\n    `\n    text-decoration: line-through;\n    color: #E1E1E1;\n  `}\n`;\n\nconst TodoCheckbox = styled.div`\n  position: relative;\n  margin-right: 20px;\n  height: 10px;\n  width: 10px;\n  border: 1px solid #bbbbbb;\n  border-radius: 50%;\n  transition: 0.3s;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    left: 0.5px;\n    bottom: 4px;\n    transform: rotate(-50deg);\n    width: 15px;\n    height: 2px;\n    background-color: #858585;\n    opacity: 0;\n    transition: 0.3s;\n  }\n  &::after {\n    content: \"\";\n    position: absolute;\n    left: -2px;\n    bottom: 2px;\n    transform: rotate(45deg);\n    width: 7px;\n    height: 2px;\n    background-color: #858585;\n    opacity: 0;\n    transition: 0.3s;\n  }\n  ${(props) =>\n    props.$isDone &&\n    `\n    border: 1px solid transparent;\n\n    &::before {\n      opacity: 1;\n    }\n    \n    &::after {\n      opacity: 1;\n    }\n  `}\n`;\n\nconst TodoContent = styled.p`\n  word-break: break-word;\n  width: calc(100% - 32px);\n`;\n\nconst TodoButtonWrapper = styled.div`\n  display: flex;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 16px;\n  height: 16px;\n  outline: none;\n  border: transparent;\n  background-color: transparent;\n  opacity: 0;\n  transition: 0.3s;\n  cursor: pointer;\n\n  img {\n    width: 16px;\n    height: 16px;\n  }\n\n  & + & {\n    margin-left: 20px;\n  }\n\n  @media screen and (max-width: 768px) {\n    opacity: 1;\n  }\n`;\n\nexport default function SingleTodoItem({\n  todo,\n  handleDeleteTodo,\n  handleToggleIsDone,\n}) {\n  const handleToggleClick = () => {\n    handleToggleIsDone(todo.id);\n  };\n\n  const handleDeleteClick = () => {\n    handleDeleteTodo(todo.id);\n  };\n\n  return (\n    <TodoItem data-todo-id={todo.id}>\n      <TodoItemContent>\n        <TodoItemText $isDone={todo.isDone} onClick={handleToggleClick}>\n          <TodoCheckbox $isDone={todo.isDone} />\n          <TodoContent>{todo.content}</TodoContent>\n        </TodoItemText>\n      </TodoItemContent>\n      <TodoButtonWrapper>\n        <Button onClick={handleDeleteClick}>\n          <img src={DeleteImg} alt=\"\" />\n        </Button>\n      </TodoButtonWrapper>\n    </TodoItem>\n  );\n}\n\nSingleTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    isDone: PropTypes.bool,\n    content: PropTypes.string,\n  }),\n  handleDeleteTodo: PropTypes.func,\n  handleToggleIsDone: PropTypes.func,\n};\n","export const ADD_TODO = \"add_todo\";\nexport const DELETE_TODO = \"delete_todo\";\nexport const TOGGLE_TODO = \"toggle_todo_is_done\";\nexport const CLEAR_COMPLETED_TODO = \"clear_completed_todo\";\nexport const SET_CURRENT_FILTER = 'set_current_filter';","import {\n  ADD_TODO,\n  DELETE_TODO,\n  TOGGLE_TODO,\n  SET_CURRENT_FILTER,\n  CLEAR_COMPLETED_TODO,\n} from \"./actionTypes\";\n\nexport function addTodo(content) {\n  return {\n    type: ADD_TODO,\n    payload: {\n      content,\n    },\n  };\n}\n\nexport function deleteTodo(id) {\n  return {\n    type: DELETE_TODO,\n    payload: {\n      id,\n    },\n  };\n}\n\nexport function toggleIsDone(id) {\n  return {\n    type: TOGGLE_TODO,\n    payload: {\n      id,\n    },\n  };\n}\n\nexport function clearCompletedTodo() {\n  return {\n    type: CLEAR_COMPLETED_TODO,\n  };\n}\n\nexport function setCurrentFilter(filterName) {\n  return {\n    type: SET_CURRENT_FILTER,\n    payload: {\n      filterName,\n    },\n  };\n}\n","export const FILTER = {\n  ALL: \"all\",\n  COMPLETED: \"completed\",\n  INCOMPLETE: \"incomplete\",\n};","import styled from \"styled-components\";\nimport clearImg from \"../images/clear.svg\";\nimport { useState, useMemo } from \"react\";\nimport SingleTodoItem from \"./TodoItem\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  addTodo,\n  deleteTodo,\n  toggleIsDone,\n  clearCompletedTodo,\n  setCurrentFilter,\n} from \"../redux/actions\";\nimport { FILTER } from \"../constants/filter\";\n\nconst TodoListWrapper = styled.section`\n  width: 100%;\n  background-color: #fff;\n  box-shadow: 0 0 50px rgba(135, 135, 135, 0.1);\n`;\n\nconst FilterWrapper = styled.div`\n  display: flex;\n`;\n\nconst FilterButton = styled.div`\n  width: calc(100% / 3);\n  line-height: 50px;\n  text-align: center;\n  color: #555555;\n  background: ${(props) => (props.$isActive ? \"#fff\" : \"#f9f9f9\")};\n  border-bottom: 1px solid\n    ${(props) => (props.$isActive ? \"transparent\" : \"#ececec\")};\n  transition: 0.3s;\n  cursor: pointer;\n\n  & + & {\n    border-left: 1px solid #ececec;\n  }\n\n  &:hover {\n    background-color: #fff;\n  }\n`;\n\nconst TodoItemInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 45px;\n  height: 75px;\n  font-size: 15px;\n  color: #858585;\n`;\n\nconst IncompletedCount = styled.span`\n  margin-right: 5px;\n`;\n\nconst ClearButton = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 5px 10px;\n  border: 1px solid #e1e1e1;\n  border-radius: 30px;\n  cursor: pointer;\n  transition: 0.3s;\n\n  &:hover {\n    background-color: #f9f9f9;\n  }\n\n  img {\n    margin-right: 5px;\n    width: 15px;\n    height: 15px;\n  }\n`;\n\nconst TodoItemWrapper = styled.ul`\n  margin: 0;\n  padding: 0;\n  max-height: 260px;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    width: 10px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #e3e3e3;\n    border-radius: 20px;\n  }\n`;\n\nconst TodoItemInputField = styled.div`\n  display: flex;\n  border-top: 1px solid #ececec;\n`;\n\nconst TodoItemTextField = styled.input`\n  padding: 0 25px;\n  width: calc(100% - 60px);\n  border: transparent;\n  outline: none;\n  font-size: 20px;\n  color: #555555;\n\n  ::placeholder {\n    font-size: 20px;\n    color: #dcdcdc;\n  }\n`;\nconst AddButton = styled.button`\n  width: 60px;\n  height: 60px;\n  border: transparent;\n  border-left: 1px solid #ececec;\n  background-color: transparent;\n  color: #555555;\n  font-family: \"Microsoft JhengHei\";\n  font-size: 30px;\n  outline: none;\n  cursor: pointer;\n  transition: 0.3s;\n\n  &:hover {\n    background-color: #f9f9f9;\n  }\n`;\n\nexport default function TodoList() {\n  const dispatch = useDispatch();\n  const todos = useSelector((store) => store.todos.todos);\n  const currentFilter = useSelector((store) => store.filter);\n  const [value, setValue] = useState(\"\");\n  let incompleteCount = todos.filter((todo) => !todo.isDone).length;\n\n  function SendTodoContent() {\n    if (!value) return;\n    dispatch(addTodo(value));\n    setValue(\"\"); // 做完就清空 setValue\n  }\n  const handleButtonClick = () => SendTodoContent();\n  const handleInputKeyDown = (e) => {\n    if (e.keyCode === 13) SendTodoContent();\n  };\n\n  const handleInputChange = (e) => setValue(e.target.value);\n\n  const handleDeleteTodo = (id) => {\n    dispatch(deleteTodo(id));\n  };\n\n  const handleToggleIsDone = (id) => {\n    dispatch(toggleIsDone(id));\n  };\n\n  const filterAllTodo = () => dispatch(setCurrentFilter(FILTER.ALL));\n\n  const filterUncompeletedTodo = () =>\n    dispatch(setCurrentFilter(FILTER.INCOMPLETE));\n\n  const filterDoneTodo = () => dispatch(setCurrentFilter(FILTER.COMPLETED));\n\n  const filterTodos = useMemo(() => {\n    if (currentFilter === FILTER.ALL) return todos;\n    return todos.filter((todo) =>\n      currentFilter === FILTER.COMPLETED ? todo.isDone : !todo.isDone\n    );\n  }, [todos, currentFilter]);\n\n  const clearDoneTodo = () => {\n    dispatch(clearCompletedTodo());\n  };\n\n  return (\n    <TodoListWrapper>\n      <FilterWrapper>\n        <FilterButton\n          onClick={filterAllTodo}\n          $isActive={currentFilter === FILTER.ALL}\n        >\n          全部\n        </FilterButton>\n        <FilterButton\n          onClick={filterUncompeletedTodo}\n          $isActive={currentFilter === FILTER.INCOMPLETE}\n        >\n          未完成\n        </FilterButton>\n        <FilterButton\n          onClick={filterDoneTodo}\n          $isActive={currentFilter === FILTER.COMPLETED}\n        >\n          已完成\n        </FilterButton>\n      </FilterWrapper>\n      <TodoItemInfo>\n        <p>\n          <IncompletedCount>{incompleteCount}</IncompletedCount>個未完成\n        </p>\n        <ClearButton onClick={clearDoneTodo}>\n          <img src={clearImg} alt=\"\" />\n          移除已完成事項\n        </ClearButton>\n      </TodoItemInfo>\n      <TodoItemWrapper>\n        {filterTodos.map((todo) => (\n          <SingleTodoItem\n            key={todo.id}\n            todo={todo}\n            handleDeleteTodo={handleDeleteTodo}\n            handleToggleIsDone={handleToggleIsDone}\n          />\n        ))}\n      </TodoItemWrapper>\n      <TodoItemInputField>\n        <TodoItemTextField\n          type=\"text\"\n          placeholder=\"Add something to do here?\"\n          value={value}\n          onChange={handleInputChange}\n          onKeyDown={handleInputKeyDown}\n        />\n        <AddButton onClick={handleButtonClick}>+</AddButton>\n      </TodoItemInputField>\n    </TodoListWrapper>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalCSS = createGlobalStyle`\n  body {\n    background-color: #EFF4F6;\n    font-family: 'Microsoft JhengHei';\n  }\n  p {\n    margin: 0;\n  }\n`;\n\nexport default function GlobalStyle() {\n  return <GlobalCSS />;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport TodoList from \"./TodoList\";\nimport GlobalStyle from \"./GlobalStyle\";\n\nconst Wrapper = styled.div`\n  margin: 100px auto 0 auto;\n  max-width: 550px;\n\n  @media screen and (max-width: 768px) {\n    width: 90%;\n  }\n`;\n\nfunction App() {\n  return (\n    <Wrapper>\n      <GlobalStyle />\n      <TodoList />\n    </Wrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_TODO, DELETE_TODO, TOGGLE_TODO, CLEAR_COMPLETED_TODO } from \"../actionTypes\";\n\nlet nextTodoId = 0;\n\nconst initialState = {\n  todos: [],\n};\n\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO: {\n      return {\n        ...state,\n        todos: [\n          ...state.todos,\n          {\n            id: nextTodoId++,\n            content: action.payload.content, // payload: 想傳的參數\n          },\n        ],\n      };\n    }\n\n    case DELETE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== action.payload.id),\n      };\n    }\n\n    case TOGGLE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.map((todo) => {\n          if (todo.id !== action.payload.id) return todo; // 如果這個 todo 不是要修改的 todo id 就回傳原本的 todo\n\n          // 回傳原本的東西（...todo）+ 要修改的屬性（isDone: !todo.isDone）\n          return {\n            ...todo,\n            isDone: !todo.isDone,\n          };\n        }),\n      };\n    }\n\n    case CLEAR_COMPLETED_TODO: {\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.isDone !== true),\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from \"redux\";\nimport todoReducer from \"./todos\";\nimport filterReducer from \"./filter\";\n\nexport default combineReducers({\n  todos: todoReducer,\n  filter: filterReducer,  \n});\n","import { SET_CURRENT_FILTER } from \"../actionTypes\";\n\nconst initialState = \"all\";\n\nexport default function filterReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_FILTER: {\n      return action.payload.filterName;\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}